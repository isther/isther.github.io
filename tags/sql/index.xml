<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SQL on Ther&#39;s Blog</title>
    <link>https://www.niuwx.cn/tags/sql/</link>
    <description>Recent content in SQL on Ther&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 15 Jul 2021 19:31:51 +0800</lastBuildDate><atom:link href="https://www.niuwx.cn/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL基本操作</title>
      <link>https://www.niuwx.cn/posts/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Thu, 15 Jul 2021 19:31:51 +0800</pubDate>
      
      <guid>https://www.niuwx.cn/posts/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</guid>
      <description>简单介绍了一下MySQL基本操作</description>
      <content:encoded><![CDATA[<h3 id="数据库的基本知识">数据库的基本知识</h3>
<blockquote>
<p>概念</p>
<p><strong>数据库</strong>：database，是一种存储数据的仓库。</p>
</blockquote>
<ul>
<li>数据库是根据数据结构组织，存储和管理数据的</li>
<li>数据库能够长期、高效的管理和存储数据</li>
<li>数据库的目的就是能够存储（写）和提供（读）数据</li>
</ul>
<h3 id="数据库分类">数据库分类</h3>
<blockquote>
<p>概念</p>
<p><strong>数据库分类</strong>：根据数据库的架构和数据组织原理进行分类。</p>
</blockquote>
<ol>
<li>
<p>早起根据数据库的组织数据的存储模型分类</p>
<ul>
<li>层次数据库：基于层次的数据结构（数据分层）</li>
<li>网状数据库：基于网状的数据结构（数据网络）</li>
<li>关系数据库：基于关系模型的数据结构（二维表）</li>
</ul>
</li>
<li>
<p>现在较多根据实际数据管理模型分类（存储介质）</p>
<ul>
<li>关系型数据库：基于关系模型的数据结构（二维表）通常存储在磁盘</li>
<li>非关系型数据库：没有具体模型的数据结构（键值对）通常存储在内存</li>
</ul>
</li>
</ol>
<h4 id="关系型数据库">关系型数据库</h4>
<blockquote>
<p>概念</p>
<p><strong>关系型数据库</strong>：一种建立在关系模型上的数据库</p>
</blockquote>
<ul>
<li>关系模型：
<ul>
<li>关系数据结构（存储）</li>
<li>关系操作集合（操作）</li>
<li>关系完整约束（约束）</li>
</ul>
</li>
<li>关系型数据库存储在磁盘中（永久性存储）</li>
<li>关系型数据库系统(DBS)模型有四层结构
<ul>
<li>数据库管理系统(DBMS)：管理系统运行</li>
<li>数据库(DB)：数据存储的管理者</li>
<li>数据表(Table)：数据关系管理者</li>
<li>数据字段(Field)：依赖于数据表、实际数据存储者</li>
</ul>
</li>
<li>关系型数据库产品
<ul>
<li>大型：Oracle、DB2</li>
<li>中性：MySQL、SqlServer</li>
<li>小型：Sybase、Access</li>
</ul>
</li>
</ul>
<h4 id="非关系型数据库">非关系型数据库</h4>
<blockquote>
<p>概念</p>
<p><strong>非关系型数据库</strong>：NoSQL（Not only SQL），不仅仅是关系型数据库</p>
</blockquote>
<ul>
<li>所以不是关系型数据库的统称</li>
<li>数据存储模型不是二维表，而是键值对（KEY-VALUE）</li>
<li>存储的位置通常是内存（效率高）</li>
<li>不能永久性存储（需要定时存到关系型数据库中）</li>
<li>常见的非关系型数据库产品
<ul>
<li>MongoDB</li>
<li>Redis</li>
<li>Memcached</li>
</ul>
</li>
</ul>
<h4 id="对比">对比</h4>
<p>NoSQL通常与关系型数据库配合使用，他们彼此是一种互补关系。</p>
<ul>
<li>NoSQL运行在内存、解决效率问题
<ul>
<li>I/O问题</li>
<li>效率问题</li>
</ul>
</li>
<li>MySQL运行在磁盘、解决稳定问题
<ul>
<li>安全问题（永久存储）</li>
<li>稳定</li>
</ul>
</li>
</ul>
<h3 id="sql基本介绍">SQL基本介绍</h3>
<blockquote>
<p>概念</p>
<p><strong>SQL</strong>：<code>Structured Query Language</code>，结构化查询语言，是一种针对关系型数据库特殊标准化的编程语言。</p>
</blockquote>
<ul>
<li>SQL是一种编程语言</li>
<li>能够实现用户数据库查询和程序设计</li>
<li>SQL根据操作不同，分为几类：
<ul>
<li>DQL：<code>Data Query Language </code>，数据查询语言，用于查询和检索数据</li>
<li>DML：<code>Data Manipulation Language</code>，数据操作语言，用于数据的写操作（增删改）</li>
<li>DDL：<code>Data Definition Language</code>，数据定义语言，用于创建数据结构</li>
<li>DCL：<code>Data Control Language</code>，数据控制语言，用于用户权限管理</li>
<li>TPL：<code>Transaction Process Language</code>，事务处理语言，辅助DML进行事务操作（因此也归属于DML）</li>
</ul>
</li>
</ul>
<ol>
<li>SQL虽然是编程语言，但是目前数据库通常只用来进行数据管理（逻辑部分给其他编程语言）</li>
<li>SQL虽然是针对关系型数据库的通用语言，但是不同的产品操作指令不完全通用</li>
</ol>
<h3 id="mysql基本介绍">MySQL基本介绍</h3>
<blockquote>
<p>概念</p>
<p><strong>MySQL</strong>：瑞典AB公司下的一款<strong>关系型数据库</strong></p>
</blockquote>
<ul>
<li>MySQL当前属于甲骨文公司（AB-&gt;Sun-&gt;Oracle）</li>
<li>MySQL开源免费（部分存储引擎收费）</li>
<li>MySQL是一种C/S结构软件，因此需要MySQL的客户端来访问服务端（数据管理）
<ul>
<li>mysqld.exe：服务端</li>
<li>mysql.exe：客户端</li>
</ul>
</li>
<li>MySQL使用SQL指令对数据库进行操作</li>
</ul>
<h4 id="访问原理">访问原理</h4>
<pre tabindex="0"><code class="language-mermaid" data-lang="mermaid">graph LR
A[MySQL客户端] --&gt;B[寻找服务端 host寻找]
    B --&gt; C[寻找服务器 Port寻找]
    C --&gt; D[验证身份 username验证 password验证]
    D --&gt; E{服务器}
</code></pre><h3 id="mysql访问">MySQL访问</h3>
<blockquote>
<p><strong>MySQL访问</strong>：客户端连接上服务器，然后实现数据操作的过程</p>
</blockquote>
<ul>
<li>客户端访问服务端
<ul>
<li>利用Windows控制台访问（MySQL客户端）</li>
<li>利用数据库管理工具（Navicat）</li>
</ul>
</li>
<li>客户端需要连接认证
<ul>
<li>-h：主机地址（本机localhost 、可以忽略）</li>
<li>-P：端口号（默认3306）</li>
<li>-u：用户名</li>
<li>-p：用户密码</li>
</ul>
</li>
<li>客户端连接上服务端就表示占用了一个资源，可以进行对应权限的操作
<ul>
<li>MySQL数据库连接资源有限：单个服务器最多16384个</li>
<li>连接资源不够了其他访问就需要排队等待</li>
<li>用完尽可能释放资源</li>
</ul>
</li>
</ul>]]></content:encoded>
    </item>
    
  </channel>
</rss>
