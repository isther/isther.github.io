<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>顺序表 on Ther&#39;s Blog</title>
    <link>https://www.niuwx.cn/tags/%E9%A1%BA%E5%BA%8F%E8%A1%A8/</link>
    <description>Recent content in 顺序表 on Ther&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 29 Jan 2021 17:38:51 +0800</lastBuildDate><atom:link href="https://www.niuwx.cn/tags/%E9%A1%BA%E5%BA%8F%E8%A1%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>顺序表</title>
      <link>https://www.niuwx.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%A1%BA%E5%BA%8F%E8%A1%A8/</link>
      <pubDate>Fri, 29 Jan 2021 17:38:51 +0800</pubDate>
      
      <guid>https://www.niuwx.cn/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E9%A1%BA%E5%BA%8F%E8%A1%A8/</guid>
      <description>简单介绍了一下顺序表</description>
      <content:encoded><![CDATA[<h3 id="概念">概念</h3>
<p>具有 <em>一对一</em> 逻辑关系的数据按照次序连续存储到一整块物理空间上”的存储结构就是顺序存储结构（顺序表）</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">#include</span><span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e">#include</span><span style="color:#75715e">&lt;stdlib.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e">#include</span><span style="color:#75715e">&lt;time.h&gt;</span><span style="color:#75715e">
</span><span style="color:#75715e">#define MAXSIZE 100
</span><span style="color:#75715e">#define OK 1
</span><span style="color:#75715e">#define ERROR 0
</span><span style="color:#75715e"></span><span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">int</span> Status;
<span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">int</span> elem;


<span style="color:#66d9ef">typedef</span> <span style="color:#66d9ef">struct</span> Sqlist{
    elem <span style="color:#f92672">*</span>e;<span style="color:#75715e">//存储空间的及地址
</span><span style="color:#75715e"></span>    <span style="color:#66d9ef">int</span> length;<span style="color:#75715e">//长度
</span><span style="color:#75715e"></span>}Sqlist;
</code></pre></div><h3 id="功能的实现">功能的实现</h3>
<h4 id="顺序表的初始化">顺序表的初始化</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//数组的初始化
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">InitArray</span>(Sqlist <span style="color:#f92672">*</span>L){
    <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e) {<span style="color:#75715e">//判断指针是否为空
</span><span style="color:#75715e"></span>        free(L<span style="color:#f92672">-&gt;</span>e);
        L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">=</span> NULL;
    }

    L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">=</span> (elem<span style="color:#f92672">*</span>)malloc(<span style="color:#66d9ef">sizeof</span>(<span style="color:#66d9ef">int</span>) <span style="color:#f92672">*</span> MAXSIZE);<span style="color:#75715e">//申请capacity大小的空间
</span><span style="color:#75715e"></span>
    <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">==</span> NULL){
        printf(<span style="color:#e6db74">&#34;内存分配失败!</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);<span style="color:#75715e">//判断内存分配是否成功
</span><span style="color:#75715e"></span>        exit(<span style="color:#ae81ff">0</span>);
    }

    L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;
    <span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="元素的添加">元素的添加</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//添加元素
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">PushBackArray</span>(Sqlist <span style="color:#f92672">*</span>L,elem value){
    <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">==</span> NULL){
        printf(<span style="color:#e6db74">&#34;请初始化顺序表</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
        <span style="color:#66d9ef">return</span> ERROR;
    }

    <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">==</span> MAXSIZE) {
        <span style="color:#66d9ef">return</span> ERROR;
    }
    L<span style="color:#f92672">-&gt;</span>e[L<span style="color:#f92672">-&gt;</span>length] <span style="color:#f92672">=</span> value;
    <span style="color:#f92672">++</span>L<span style="color:#f92672">-&gt;</span>length;
    <span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="元素的插入">元素的插入</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//插入
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">InsertArray</span>(Sqlist <span style="color:#f92672">*</span>L,<span style="color:#66d9ef">int</span> index,elem value){
    <span style="color:#66d9ef">if</span>(index <span style="color:#f92672">&gt;</span> L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">+</span><span style="color:#ae81ff">1</span> <span style="color:#f92672">||</span> index <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">1</span>){
        <span style="color:#66d9ef">return</span> ERROR;
    }

    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> L<span style="color:#f92672">-&gt;</span>length; i <span style="color:#f92672">&gt;=</span> index; i<span style="color:#f92672">--</span>) {
		L<span style="color:#f92672">-&gt;</span>e[i] <span style="color:#f92672">=</span> L<span style="color:#f92672">-&gt;</span>e[i <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>];
	}

	L<span style="color:#f92672">-&gt;</span>e[index] <span style="color:#f92672">=</span> value;

	<span style="color:#f92672">++</span>L<span style="color:#f92672">-&gt;</span>length;
	<span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="元素的查找">元素的查找</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//根据位置查找
</span><span style="color:#75715e"></span>elem <span style="color:#a6e22e">FindByIndex</span>(Sqlist<span style="color:#f92672">*</span> L,<span style="color:#66d9ef">int</span> index){
    <span style="color:#66d9ef">return</span> L<span style="color:#f92672">-&gt;</span>e[index];
}
</code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//根据值查找
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">FindByValue</span>(Sqlist<span style="color:#f92672">*</span> L,elem value){
    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> L<span style="color:#f92672">-&gt;</span>length; i<span style="color:#f92672">++</span>){
        <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e[i] <span style="color:#f92672">==</span> value){
            <span style="color:#66d9ef">return</span> i;
        }
    }
    <span style="color:#66d9ef">return</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>;
}
</code></pre></div><h4 id="元素的删除">元素的删除</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//根据值删除
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">RemoveByValue</span>(Sqlist<span style="color:#f92672">*</span> L,elem value){
    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> L<span style="color:#f92672">-&gt;</span>length; i<span style="color:#f92672">++</span>){
        <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e[i] <span style="color:#f92672">==</span> value){
	        <span style="color:#66d9ef">for</span> (; i <span style="color:#f92672">&lt;</span> L<span style="color:#f92672">-&gt;</span>length; i<span style="color:#f92672">++</span>) {
		        L<span style="color:#f92672">-&gt;</span>e[i <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>] <span style="color:#f92672">=</span> L<span style="color:#f92672">-&gt;</span>e[i];
	        }

	        <span style="color:#f92672">--</span>L<span style="color:#f92672">-&gt;</span>length;
	        <span style="color:#66d9ef">return</span> OK;
        }
    }
}
</code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//根据位置删除
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">RemoveByIndex</span>(Sqlist<span style="color:#f92672">*</span> L,<span style="color:#66d9ef">int</span> index){
	<span style="color:#66d9ef">if</span> (index <span style="color:#f92672">&gt;</span> L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">||</span> index <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">1</span>) {
		<span style="color:#66d9ef">return</span> ERROR;
	}

	<span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> index; i <span style="color:#f92672">&lt;</span> L<span style="color:#f92672">-&gt;</span>length; i<span style="color:#f92672">++</span>) {
		L<span style="color:#f92672">-&gt;</span>e[i <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>] <span style="color:#f92672">=</span> L<span style="color:#f92672">-&gt;</span>e[i];
	}

	<span style="color:#f92672">--</span>L<span style="color:#f92672">-&gt;</span>length;
	<span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="元素的清空">元素的清空</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//清空
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">CleanArray</span>(Sqlist <span style="color:#f92672">*</span>L){
    <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">==</span> NULL) {
        printf(<span style="color:#e6db74">&#34;未初始化</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
        <span style="color:#66d9ef">return</span> ERROR;
    
    }

    L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;
    <span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="线性表的销毁">线性表的销毁</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//销毁
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">FreeArray</span>(Sqlist<span style="color:#f92672">*</span> L){
    <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">!=</span> NULL){
        free(L<span style="color:#f92672">-&gt;</span>e);
        L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">=</span> NULL;
    }

    L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;

    <span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="获取当前长度">获取当前长度</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//长度
</span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">GetLength</span>(Sqlist<span style="color:#f92672">*</span> L){
     <span style="color:#66d9ef">if</span>(L<span style="color:#f92672">-&gt;</span>e <span style="color:#f92672">==</span> NULL) <span style="color:#66d9ef">return</span> <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>;
    <span style="color:#66d9ef">return</span> L<span style="color:#f92672">-&gt;</span>length;
}
</code></pre></div><h4 id="判断是否为空">判断是否为空</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//判断是否为空
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">IsEmptyArray</span>(Sqlist <span style="color:#f92672">*</span>L){
    <span style="color:#66d9ef">return</span> L<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;
}

</code></pre></div><h4 id="顺序表的合并">顺序表的合并</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//合并
</span><span style="color:#75715e"></span>Status <span style="color:#a6e22e">CombineArray</span>(Sqlist <span style="color:#f92672">*</span>L1,Sqlist <span style="color:#f92672">*</span>L2){
    <span style="color:#66d9ef">if</span> (L1<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">+</span> L2<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">&gt;</span> MAXSIZE) {
        printf(<span style="color:#e6db74">&#34;空间不足，合并失败</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
		<span style="color:#66d9ef">return</span> ERROR;
	}

	<span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> L2<span style="color:#f92672">-&gt;</span>length; i<span style="color:#f92672">++</span>) {
		L1<span style="color:#f92672">-&gt;</span>e[L1<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">+</span> i] <span style="color:#f92672">=</span> L2<span style="color:#f92672">-&gt;</span>e[i];
	}
    L1<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">+=</span>L2<span style="color:#f92672">-&gt;</span>length;

    free(L2<span style="color:#f92672">-&gt;</span>e);
    L2<span style="color:#f92672">-&gt;</span>length <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>;

    <span style="color:#66d9ef">return</span> OK;
}
</code></pre></div><h4 id="顺序表的打印">顺序表的打印</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#75715e">//打印
</span><span style="color:#75715e"></span><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">PrintArray</span>(Sqlist<span style="color:#f92672">*</span> L){
    <span style="color:#66d9ef">for</span> (<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> L<span style="color:#f92672">-&gt;</span>length; i<span style="color:#f92672">++</span>){
        printf(<span style="color:#e6db74">&#34;%d &#34;</span>,L<span style="color:#f92672">-&gt;</span>e[i]);
    }
    printf(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
}
</code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-c" data-lang="c"><span style="color:#66d9ef">void</span> <span style="color:#a6e22e">test</span>(){<span style="color:#75715e">//测试
</span><span style="color:#75715e"></span>    Sqlist L,L2;
      <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/********初始化及添加元素********/</span>
    <span style="color:#75715e">/******************************/</span>
    InitArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//初始化顺序表
</span><span style="color:#75715e"></span>    InitArray(<span style="color:#f92672">&amp;</span>L2);
    <span style="color:#75715e">//srand(time(NULL));
</span><span style="color:#75715e"></span>    <span style="color:#66d9ef">for</span>(<span style="color:#66d9ef">int</span> i <span style="color:#f92672">=</span> <span style="color:#ae81ff">0</span>; i <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">10</span>; i<span style="color:#f92672">++</span>){<span style="color:#75715e">//赋值
</span><span style="color:#75715e"></span>        PushBackArray(<span style="color:#f92672">&amp;</span>L,i);
        PushBackArray(<span style="color:#f92672">&amp;</span>L2,i);
    }
    printf(<span style="color:#e6db74">&#34;初始化...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    PrintArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//打印
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;%d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, GetLength(<span style="color:#f92672">&amp;</span>L));<span style="color:#75715e">//获取当前长度
</span><span style="color:#75715e"></span>
     <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/************插入元素***********/</span>
    <span style="color:#75715e">/******************************/</span>
    InsertArray(<span style="color:#f92672">&amp;</span>L,<span style="color:#ae81ff">5</span>,<span style="color:#ae81ff">100</span>);<span style="color:#75715e">//插入元素
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;插入元素...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    PrintArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//打印
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;%d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, GetLength(<span style="color:#f92672">&amp;</span>L));<span style="color:#75715e">//获取当前长度
</span><span style="color:#75715e"></span>
      <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/************查找元素***********/</span>
    <span style="color:#75715e">/******************************/</span>
    printf(<span style="color:#e6db74">&#34;查找元素...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    printf(<span style="color:#e6db74">&#34;%d &#34;</span>,FindByIndex(<span style="color:#f92672">&amp;</span>L,<span style="color:#ae81ff">10</span>));<span style="color:#75715e">//根据位置查找
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;%d &#34;</span>,FindByValue(<span style="color:#f92672">&amp;</span>L,<span style="color:#ae81ff">4</span>));<span style="color:#75715e">//根据值查找
</span><span style="color:#75715e"></span>


      <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/************删除元素***********/</span>
    <span style="color:#75715e">/******************************/</span>
    RemoveByIndex(<span style="color:#f92672">&amp;</span>L,<span style="color:#ae81ff">3</span>);<span style="color:#75715e">//根据位置删除
</span><span style="color:#75715e"></span>    RemoveByValue(<span style="color:#f92672">&amp;</span>L,<span style="color:#ae81ff">9</span>);<span style="color:#75715e">//根据值删除
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;删除元素...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    PrintArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//打印
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;%d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, GetLength(<span style="color:#f92672">&amp;</span>L));<span style="color:#75715e">//获取当前长度
</span><span style="color:#75715e"></span>

      <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/***********合并顺序表**********/</span>
    <span style="color:#75715e">/******************************/</span>
    CombineArray(<span style="color:#f92672">&amp;</span>L,<span style="color:#f92672">&amp;</span>L2);<span style="color:#75715e">//合并
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;合并顺序表...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    PrintArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//打印
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;%d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, GetLength(<span style="color:#f92672">&amp;</span>L));<span style="color:#75715e">//获取当前长度
</span><span style="color:#75715e"></span>
     <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/***********清空顺序表**********/</span>
    <span style="color:#75715e">/******************************/</span>
    CleanArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//清空
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;清空顺序表...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    PrintArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//打印
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;%d</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>, GetLength(<span style="color:#f92672">&amp;</span>L));<span style="color:#75715e">//获取当前长度
</span><span style="color:#75715e"></span>
      <span style="color:#75715e">/******************************/</span>
     <span style="color:#75715e">/***********销毁顺序表**********/</span>
    <span style="color:#75715e">/******************************/</span>
    FreeArray(<span style="color:#f92672">&amp;</span>L);<span style="color:#75715e">//销毁
</span><span style="color:#75715e"></span>    printf(<span style="color:#e6db74">&#34;销毁顺序表...</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>);
    printf(<span style="color:#e6db74">&#34;%d&#34;</span>,PushBackArray(<span style="color:#f92672">&amp;</span>L,<span style="color:#ae81ff">1</span>));
}


<span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(){
    test();
    system(<span style="color:#e6db74">&#34;pause&#34;</span>);
    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
}
</code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
